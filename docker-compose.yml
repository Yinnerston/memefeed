version: '3.8'

x-logging: &loki-logging
  driver: loki
  options:
    loki-url: "http://localhost:3100/api/prom/push"

services:
  memefeed:
    build: ./src/memefeed
    # sh -c 'while !</dev/tcp/db/5432; do sleep 1; done;
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./src/memefeed:/app
    ports:
      - 8000:8000
    environment:
      - DEBUG=1
      - DATABASE_URL=postgresql://memefeeduser:${POSTGRES_PASSWORD}@db:5432/memefeed
      - DJANGO_DEV_SECRET_KEY=${DJANGO_DEV_SECRET_KEY}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DJ_LOGLEVEL=DEBUG # Change in production
    logging: *loki-logging
    depends_on:
      - db
    networks:
      - memefeed-network
  prometheus:
    build: ./src/prometheus
    volumes:
      - ./src/prometheus:/prometheus
    ports:
      - 9090:9090
    networks:
      - memefeed-network
  grafana:
    build: ./src/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - ./src/grafana:/grafana
      - ./data/grafana:/var/lib/grafana
    ports:
      - 3000:3000
    depends_on:
      - prometheus
    logging: *loki-logging
    networks:
      - memefeed-network
  db:
    image: postgres:13.9-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - 5432
    environment:
      - POSTGRES_USER=memefeeduser
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=memefeed
    networks:
      - memefeed-network
  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    restart: on-failure
    networks:
      - memefeed-network
  cadvisor:
    image: google/cadvisor
    container_name: cadvisor
    volumes:
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "${CADVISOR_PORT:-8080}:8080"
    restart: on-failure
    networks:
      - memefeed-network
  loki:
    image: grafana/loki:2.6.1
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - memefeed-network
  promtail:
    image: grafana/promtail:2.6.1
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    networks:
      - memefeed-network
  redis_cache:
    image: redis:4-alpine
    restart: always
    volumes:
      # - ./redis.conf:/usr/local/etc/redis/redis.conf # use default config
      - "redis:/data"
    ports:
      - "6019:6379"
    command: redis-server
    networks:
      - memefeed-network


volumes:
  postgres_data:
  redis: {}
networks:
  memefeed-network:
