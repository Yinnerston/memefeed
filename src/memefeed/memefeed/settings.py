"""
Django settings for memefeed project.

Generated by 'django-admin startproject' using Django 4.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import environ
import os
import sentry_sdk
from sentry_sdk.integrations.django import DjangoIntegration
from django.utils.log import DEFAULT_LOGGING

env = environ.Env()
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env("DEBUG") == "1"

# Only monitor 1/4 of transactions in production
if DEBUG:
    SENTRY_TRACES_SAMPLE_RATE = 1.0
else:
    SENTRY_TRACES_SAMPLE_RATE = 0.25

sentry_sdk.init(
    dsn="https://88cd2a5285c848fb8601e23566969e45@o4504333010731009.ingest.sentry.io/4504365878673409",
    integrations=[
        DjangoIntegration(),
    ],
    # Set traces_sample_rate to 1.0 to capture 100%
    # of transactions for performance monitoring.
    # We recommend adjusting this value in production.
    traces_sample_rate=SENTRY_TRACES_SAMPLE_RATE,
    # If you wish to associate users to errors (assuming you are using
    # django.contrib.auth) you may enable sending PII data.
    send_default_pii=True,
)


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("DJANGO_DEV_SECRET_KEY")


ALLOWED_HOSTS = ["localhost", "memefeed"]


# Application definition

# TODO: https://github.com/korfuri/django-prometheus/blob/master/documentation/exports.md django prometheus export with wsgi/gunicorn
INSTALLED_APPS = [
    "django_prometheus",
    "reddit.apps.RedditConfig",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "debug_toolbar",
    "django_extensions",
]

MIDDLEWARE = [
    "django_prometheus.middleware.PrometheusBeforeMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "debug_toolbar.middleware.DebugToolbarMiddleware",
    "django_prometheus.middleware.PrometheusAfterMiddleware",
]

ROOT_URLCONF = "memefeed.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

# Caches
CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.redis.RedisCache",
        "LOCATION": "redis://redis_cache:6379",
    }
}


WSGI_APPLICATION = "memefeed.wsgi.application"

# Django Debug Toolbar: Set INTERNAL_IPS in docker
if DEBUG:
    import socket  # only if you haven't already imported this

    hostname, _, ips = socket.gethostbyname_ex(socket.gethostname())
    INTERNAL_IPS = [ip[: ip.rfind(".")] + ".1" for ip in ips] + [
        "127.0.0.1",
        "10.0.2.2",
    ]


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django_prometheus.db.backends.postgresql",
        "NAME": os.environ.get("POSTGRES_DBNAME") if not None else "memefeed",
        "USER": os.environ.get("POSTGRES_USERNAME") if not None else "memefeeduser",
        "PASSWORD": os.environ.get("POSTGRES_PASSWORD"),
        "HOST": "db",  # TODO: Migration to high availability server / cloud
        "PORT": "5432",
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Australia/Sydney"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = os.path.join(BASE_DIR, "static")

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Logging
LOGGING_CONFIG = None
LOGLEVEL = os.getenv("DJ_LOGLEVEL", "info").upper()
LOG_PATH = os.path.join(BASE_DIR, "log/")
LOGGING = {
    "version": 1,
    "disable_existing_loggers": True,
    "formatters": {
        # Use JSON formatter as default
        "default": {
            "()": "pythonjsonlogger.jsonlogger.JsonFormatter",
        },
        # "django.server": DEFAULT_LOGGING["formatters"]["django.server"],
    },
    "handlers": {
        # Route console logs to stdout
        "console": {
            "class": "logging.StreamHandler",
            "formatter": "default",
        },
        # "django.server": DEFAULT_LOGGING["handlers"]["django.server"],
    },
    "loggers": {
        # Default logger for all modules
        "": {
            "level": LOGLEVEL,
            "handlers": [
                "console",
            ],
        },
        # Default runserver request logging
        # "django.server": DEFAULT_LOGGING["loggers"]["django.server"],
    },
}
